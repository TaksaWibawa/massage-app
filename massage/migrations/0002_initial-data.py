# Generated by Django 4.2 on 2024-05-29 02:43

from django.db import migrations
from django.contrib.auth.hashers import make_password
from django.contrib.auth import get_user_model

def create_superuser(apps, schema_editor):
    User = get_user_model()
    if not User.objects.filter(username='admin').exists():
        User.objects.create(username='admin', password=make_password('admin123'), is_superuser=True, is_staff=True)

def remove_superuser(apps, schema_editor):
    User = get_user_model()
    User.objects.filter(username='admin').delete()

def add_global_settings(apps, schema_editor):
    GlobalSettings = apps.get_model('massage', 'GlobalSettings')
    if not GlobalSettings.objects.filter(name='Max Chairs').exists():
        GlobalSettings.objects.create(name='Max Chairs', type='number', value='8')
    if not GlobalSettings.objects.filter(name='PPN').exists():
        GlobalSettings.objects.create(name='PPN', type='percentage', value='10')
    if not GlobalSettings.objects.filter(name='Service Fee').exists():
        GlobalSettings.objects.create(name='Service Fee', type='percentage', value='40')

def remove_global_settings(apps, schema_editor):
    GlobalSettings = apps.get_model('massage', 'GlobalSettings')
    GlobalSettings.objects.all().delete()

def add_roles(apps, schema_editor):
    Role = apps.get_model('massage', 'Role')
    if not Role.objects.filter(name='supervisor').exists():
        Role.objects.create(name='supervisor')
    if not Role.objects.filter(name='employee').exists():
        Role.objects.create(name='employee')

def remove_roles(apps, schema_editor):
    Role = apps.get_model('massage', 'Role')
    Role.objects.all().delete()

def create_employee(apps, schema_editor):
    User = get_user_model()
    Employee = apps.get_model('massage', 'Employee')
    Role = apps.get_model('massage', 'Role')

    if not User.objects.filter(username='employee').exists():
        user = User.objects.create_user('employee', 'employee@example.com', 'employee123')
        role = Role.objects.get(name='employee')
        Employee.objects.create(user_id=user.id, role=role)

def remove_employee(apps, schema_editor):
    User = get_user_model()
    Employee = apps.get_model('massage', 'Employee')
    User.objects.filter(username='employee').delete()
    Employee.objects.filter(user__username='employee').delete()

class Migration(migrations.Migration):

    dependencies = [
        ('massage', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_superuser, remove_superuser),
        migrations.RunPython(add_global_settings, remove_global_settings),
        migrations.RunPython(add_roles, remove_roles),
        migrations.RunPython(create_employee, remove_employee),
    ]

